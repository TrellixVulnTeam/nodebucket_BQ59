{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/create-task-dialog/create-task-dialog.component.ts","webpack:///src/app/shared/create-task-dialog/create-task-dialog.component.html","webpack:///src/app/shared/services/task.service.ts","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","taskService","cookieService","dialog","empId","parseInt","get","findAllTasks","subscribe","res","console","log","employee","err","todo","done","dialogRef","open","disableClose","afterClosed","data","createTask","text","push","event","previousContainer","container","previousIndex","currentIndex","updateTaskList","taskId","confirm","deleteTask","updateTask","openCreateTaskDialog","drop","AuthLayoutComponent","environment","production","AuthGuard","router","route","state","sessionUser","navigate","AppComponent","SigninComponent","fb","http","form","group","compose","required","pattern","controls","value","sessionStorage","setItem","set","error","login","ContactComponent","AppModule","CreateTaskDialogComponent","taskForm","close","cancel","TaskService","task","post","put","AboutComponent","BaseLayoutComponent","year","Date","now","isLoggedIn","name","getItem","deleteAll","NotFoundComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","relativeLinkResolution","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/*\n============================================\n; Title: home.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 25 August 2021\n; Description: Home component TS file\n;===========================================\n*/\n\n// import statements\nimport { CreateTaskDialogComponent } from \"./../../shared/create-task-dialog/create-task-dialog.component\";\nimport { TaskService } from \"./../../shared/services/task.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Employee } from \"../../shared/models/employee.interface\";\nimport { Item } from \"../../shared/models/item.interface\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from \"@angular/cdk/drag-drop\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  employee: Employee;\n  todo: Item[];\n  done: Item[];\n  empId: number;\n\n  constructor(\n    private taskService: TaskService,\n    private cookieService: CookieService,\n    private dialog: MatDialog\n  ) {\n    this.empId = parseInt(this.cookieService.get(\"session_user\"), 10);\n\n    /**\n     * make call to taskService funciton findAllTasks\n     */\n    this.taskService.findAllTasks(this.empId).subscribe(\n      (res) => {\n        console.log(\"--Server response from findAllTasks API--\");\n        console.log(res);\n\n        this.employee = res; // take response from server and bind to employee object\n        console.log(\"--Employee object--\");\n        console.log(this.employee);\n      },\n      (err) => {\n        console.log(\"---Server error--\");\n        console.log(err);\n      },\n      () => {\n        console.log(\"--onComplete of the findAllTasks service call--\");\n\n        this.todo = this.employee.todo;\n        this.done = this.employee.done;\n\n        console.log(\"--Todo tasks--\");\n        console.log(this.todo);\n\n        console.log(\"--Done tasks--\");\n        console.log(this.done);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  openCreateTaskDialog() {\n    const dialogRef = this.dialog.open(CreateTaskDialogComponent, {\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe((data) => {\n      console.log(\"--empId--\");\n      console.log(this.empId);\n\n      console.log();\n      if (data) {\n        console.log(\"--Data Exists--\");\n        console.log(data);\n\n        this.taskService.createTask(this.empId, data.text).subscribe(\n          (res) => {\n            console.log(\"--Inside createTask Result--\");\n            console.log(res);\n\n            this.employee = res;\n            console.log(\"--This.employee--\");\n            console.log(this.employee);\n          },\n          (err) => {\n            console.log(\"--onError of the createTask service call--\");\n            console.log(err);\n          },\n          () => {\n            console.log(\"--onComplete--\");\n            this.todo.push(this.employee.todo[0]);\n            this.done.push(this.employee.done[0]);\n            console.log(this.todo);\n            console.log(this.done);\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * move tasks in ToDo column to Done column using drag and drop functionality\n   * @param event\n   */\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n\n      console.log(\"Reordered the existing list of task items.\"); // log message to console when tasks are reordered\n\n      this.updateTaskList(this.empId, this.todo, this.done);\n    } else {\n      // transferring items in the two arrays\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n\n      console.log(\"Moved task item into the other container.\"); // log message to console when tasks are moved into the other container\n\n      this.updateTaskList(this.empId, this.todo, this.done);\n    }\n  }\n\n  /**\n   * Calls deleteTask API to delete tasks when user chooses to delete a task\n   * @param taskId\n   */\n  deleteTask(taskId: string): void {\n    // User is prompted to choose if they are sure they want to delete a task\n    if (confirm(\"Are you sure you want to delete this task?\")) {\n      if (taskId) {\n        console.log(`Task item: ${taskId} was deleted`);\n\n        this.taskService.deleteTask(this.empId, taskId).subscribe(\n          (res) => {\n            this.employee = res.data;\n          },\n          (err) => {\n            console.log(err);\n          },\n          () => {\n            this.todo = this.employee.todo;\n            this.done = this.employee.done;\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * Calls updateTask API to update employee collection when tasks are dragged and dropped between the two columns\n   * @param empId\n   * @param todo\n   * @param done\n   */\n  private updateTaskList(empId: number, todo: Item[], done: Item[]): void {\n    this.taskService.updateTask(this.empId, this.todo, this.done).subscribe(\n      (res) => {\n        this.employee = res.data;\n      },\n      (err) => {\n        console.log(err);\n      },\n      () => {\n        this.todo = this.employee.todo;\n        this.done = this.employee.done;\n      }\n    );\n  }\n}\n","<!--\n============================================\n; Title:  home.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 25 Aug 2021\n; Description: Home component HTML file\n;===========================================\n -->\n\n<div fxLayout=\"column\" class=\"main-welcome\">\n\n  <div fxFlex>\n    <h1 class=\"title\">\n      Welcome to <span style=\"color: #67AB9F; font-weight: bold;\">nodebucket</span>.<br />\n      <br />\n      <span class=\"subtitle\">\n        Your all-in-one solution for task management.\n      </span>\n    </h1>\n  </div>\n\n  <div fxFlex>\n    <div class=\"task-container\" fxLayout=\"column\">\n      <button mat-flat-button class=\"create-button\" (click)=\"openCreateTaskDialog()\">Create Task</button>\n    </div>\n  </div>\n\n  <div fxFlex>\n\n    \n    <div fxLayout=\"row\" fxLayoutGap=\"15px\" class=\"task-container\">\n\n      <!--first column in row-->\n      <div fxFlex>\n        <mat-card class=\"mat-elevation-z0\">\n          <mat-card-title>\n            ToDo\n          </mat-card-title>\n\n          <mat-card-content>\n\n            <div\n            fxLayout=\"column\"\n            fxLayoutGap=\"10px\"\n            class=\"task-column\"\n            cdkDropList\n            #todoList=\"cdkDropList\"\n            [cdkDropListData]=\"todo\"\n            [cdkDropListConnectedTo]=\"[doneList]\"\n            (cdkDropListDropped)=\"drop($event)\">\n\n            <!-- Add drag and drop feature -->\n            <div *ngFor=\"let item of todo\" cdkDrag>\n\n                <mat-card class=\"mat-elevation-z0 task-card\">\n\n                  <mat-card-content>\n                    <div fxLayout=\"row\">\n                      <div fxFlex>\n                        {{ item.text }}\n                      </div>\n\n                      <!-- Add delete task button and place at end of card -->\n                      <div fxFlex fxLayoutAlign=\"end\">\n                        <button mat-icon-button (click)=\"deleteTask(item._id)\">\n                          <mat-icon color=\"accent\">remove_circle</mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </mat-card-content>\n                </mat-card>\n              </div>\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!--second column in row-->\n      <div fxFlex>\n        <mat-card class=\"mat-elevation-z0\">\n          <mat-card-title>\n            Done\n          </mat-card-title> \n\n          <mat-card-content>\n\n            <div\n            fxLayout=\"column\"\n            fxLayoutGap=\"10px\"\n            class=\"task-column\"\n            cdkDropList\n            #doneList=\"cdkDropList\"\n            [cdkDropListData]=\"done\"\n            [cdkDropListConnectedTo]=\"[todoList]\"\n            (cdkDropListDropped)=\"drop($event)\">\n\n              <div *ngFor=\"let item of done\" cdkDrag>\n\n                <mat-card class=\"mat-elevation-z0 task-card\">\n\n                  <mat-card-content>\n                    <div fxLayout=\"row\">\n                      <div fxFlex>\n                        {{ item.text }}\n                      </div>\n\n                      <!-- Add delete task button and place at end of card -->\n                      <div fxFlex fxLayoutAlign=\"end\">\n                        <button mat-icon-button (click)=\"deleteTask(item._id)\">\n                          <mat-icon color=\"accent\">remove_circle</mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </mat-card-content>\n                </mat-card>\n              </div>\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n    </div>\n  </div>\n  </div>\n  ","/*\n============================================\n; Title: auth-layout.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 29 August 2021\n; Description: Auth layout component TS file\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: auth.guard.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 August 2021\n; Description: AuthGuard TS file\n;===========================================\n*/\n// import statements\nimport { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private cookieService: CookieService) {}\n\n  /**\n   * Navigate to signin page if user cannot be authenticated\n   * @param route\n   * @param state\n   * @returns\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const sessionUser = this.cookieService.get(\"session_user\");\n    if (sessionUser) {\n      return true; // allow user to navigate\n    } else {\n      this.router.navigate([\"/session/signin\"]); // route to signin page\n      return false;\n    }\n  }\n}\n","/*\n============================================\n; Title: app.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 29 August 2021\n; Description: App component TS file\n;===========================================\n*/\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/*\n============================================\n; Title: signin.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 August 2021\n; Description: Sign in component TS file\n;===========================================\n*/\n// import statements\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  error: string;\n\n  constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient) { }\n\n  // Use Validators to validate form\n  ngOnInit(): void\n  {\n    this.form = this.fb.group({\n      empId: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n    })\n  }\n\n  // Sign in using empId value\n  login(): void\n{\n  const empId = this.form.controls['empId'].value;\n\n  this.http.get('/api/employees/' + empId).subscribe(res => {\n    if(res)\n    {\n\n      sessionStorage.setItem('name', `${res['firstName']} ${res['lastName']}`);\n\n      this.cookieService.set('session_user', empId, 1); // set cookie\n      this.router.navigate(['/']); // route to home page\n    }\n    else\n    {\n      this.error = 'The employeeId you entered is not valid, please try again. '; // display error message when empId is invalid\n    }\n  })\n}\n}\n","<!--\n============================================\n; Title:  signin.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 Aug 2021\n; Description: Sign in component HTML file\n;===========================================\n -->\n<div fxLayout=\"column\">\n  <mat-card fxFlex class=\"signin-container\">\n    <mat-card-title class=\"signin-title\">\n      Employee Sign-In Page\n    </mat-card-title>\n\n    <br />\n\n    <mat-card-subtitle class=\"signin-subtitle\">\n      You must enter a valid employeeId to continue.\n    </mat-card-subtitle>\n\n    <mat-card-content>\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n      </mat-card>\n    </mat-card-content>\n\n    <!--sign in form-->\n    <form [formGroup]=\"form\" (ngSubmit)=\"login(); form.reset()\">\n      <mat-card-content class=\"mat-elevation-z0\">\n        <mat-form-field>\n          <input\n            matInput\n            [formControl]=\"form.controls['empId']\"\n            placeholder=\"Employee ID\"\n          />\n          <mat-error\n            *ngIf=\"\n              form.controls['empId'].hasError('required') &&\n              form.controls['empId'].touched\n            \"\n          >\n            Employee ID is a required field.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"\n              form.controls['empId'].hasError('pattern') &&\n              form.controls['empId'].touched\n            \"\n          >\n            Employee ID must be a numerical value.\n          </mat-error>\n\n          <mat-error *ngIf=\"error\">\n            {{ error }}\n          </mat-error>\n        </mat-form-field>\n      </mat-card-content>\n\n      <!--submit button-->\n      <mat-card-actions>\n        <button type=\"submit\" fxFlex mat-raised-button [disabled]=\"!form.valid\">\n          Sign-in\n        </button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n============================================\n; Title:  contact.component.html\n; Author: Adam Luna\n; Date: 29 July 2021\n; Description: Contact component HTML file\n;===========================================\n-->\n<br />\n<!-- Page Title -->\n<h1>Contact Us</h1>\n<br />\n<!--  Subtitle -->\n<h2>Got a quesstion for us? Just want to say hello? Give us a shout! We'd love to talk to you.</h2>\n<br /><br />\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <div fxFlex=\"50%\"l>\n    <!-- Header Icon -->\n    <mat-card-title>\n      <mat-icon class=\"icons\">mail_outline</mat-icon>\n    </mat-card-title>\n    <br />\n    <mat-card-content>\n      <p>Nodebucket, LLC.</p>\n      <p>100 Nodebucket St.</p>\n      <p>San Antonio, TX 78217</p>\n    </mat-card-content>\n  </div>\n\n  <div fxFlex=\"50%\">\n    <!-- Header Icon -->\n    <mat-card-title>\n      <mat-icon class=\"icons\">phone</mat-icon>\n    </mat-card-title>\n    <br />\n    <mat-card-content>\n      <p>Direct: 123-456-7890</p>\n      <p>Toll-free: 1-800-987-6543</p>\n      <p>Email: contact@nodebucket.test</p>\n    </mat-card-content>\n  </div>\n</div>\n","/*\n============================================\n; Title: app.module.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 August 2021\n; Description: App module TS file\n;===========================================\n*/\n// import statements\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport {MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { CreateTaskDialogComponent } from './shared/create-task-dialog/create-task-dialog.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { AboutComponent } from './pages/about/about.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    CreateTaskDialogComponent,\n    ContactComponent,\n    AboutComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatDividerModule,\n    DragDropModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\n============================================\n; Title: create-task-dialog.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 25 August 2021\n; Description: Create task dialog component TS file\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-task-dialog',\n  templateUrl: './create-task-dialog.component.html',\n  styleUrls: ['./create-task-dialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n\n  taskForm: FormGroup;\n\n  constructor(private dialogRef: MatDialogRef<CreateTaskDialogComponent>, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group ({\n      text: [null, Validators.compose([Validators.required])]\n    })\n  }\n\n  createTask() {\n    this.dialogRef.close(this.taskForm.value);\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n","<!--\n============================================\n; Title:  create-task-dialog.component.html\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 25 Aug 2021\n; Description: Create task dialog component HTML file\n;===========================================\n -->\n<h2 mat-dialog-title>Add a new task</h2>\n\n<mat-dialog-content [formGroup]=\"taskForm\">\n  <mat-form-field style=\"width: 200px\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter task description\"\n      matInput\n      formControlName=\"text\"\n      (keydown.enter)=\"createTask()\"\n    />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions algin=\"end\">\n  <button mat-button (click)=\"cancel()\">Cancel</button>\n  <button mat-button [disabled]=\"!taskForm.valid\" (click)=\"createTask()\">\n    Create\n  </button>\n</mat-dialog-actions>\n","/*\n============================================\n; Title: task.service.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 25 August 2021\n; Description: Task service TS file\n;===========================================\n*/\n// import statements\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'\nimport { Item } from '../models/item.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * findAllTasks API calls the Node.js server URL /api/employees/:empId/tasks\n   * @param empId\n   * @returns 501 MongoDB Exception; 500 Server Exception; employee document with assigned task objects\n   */\n  findAllTasks(empId: number): Observable<any> {\n    return this.http.get('/api/employees/' + empId + '/tasks');\n  }\n\n  /**\n   * Create task \n   * @param empId\n   * @param task \n   * @returns task information\n   */\n  createTask(empId: number, task: string): Observable<any> {\n    return this.http.post('/api/employees/' + empId + '/tasks', {\n      text: task\n    })\n  }\n\n  /**\n   * code comments\n   * @param empId \n   * @param todo \n   * @param done \n   * @returns \n   */\n  updateTask(empId: number, todo: Item[], done: Item[]): Observable<any> {\n    return this.http.put('/api/employees/' + empId + '/tasks', {\n      todo,\n      done\n    })\n  }\n\n  /**\n   * \n   * @param empId code comments\n   * @param taskId \n   * @returns \n   */\n  deleteTask(empId: number, taskId: string): Observable<any> {\n    return this.http.delete('/api/employees/' + empId + '/tasks' + taskId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n============================================\n; Title:  about.component.html\n; Author: Adam Luna\n; Date: 01 September 2021\n; Description: About component HTML file\n;===========================================\n-->\n<br/>\n<!-- Page Title -->\n<h1>About Us</h1>\n<br /><br/>","<div fxLayout=\"column\">\n  <!-- navigation -->\n  <nav fxFlex>\n    <mat-toolbar>\n      <!-- navbar container -->\n      <div class=\"navbar-container\">\n        <!-- logo -->\n        <button class=\"logo\" routerLink=\"/\" mat-button>nodebucket</button>\n\n        <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\n        <button class=\"navbar-link\" routerLink=\"/about\" mat-button>About Us</button>\n        <button class=\"navbar-link\" routerLink=\"contact\" mat-button>Contact Us</button>\n      </div>\n\n      <div fxFlex></div>\n        <div *ngIf=\"isLoggedIn\">\n\n          <button mat-icon-button [matMenuTriggerFor]=\"profileMenu\" aria-label=\"User profile menu\">\n            <mat-icon style=\"color:#67AB9F;\">account_circle</mat-icon>\n          </button>\n\n          <mat-menu #profileMenu>\n            <p style=\"padding: 10px;\">\n              Signed in as {{ name }}\n            </p>\n\n            <mat-divider></mat-divider>\n\n            <button mat-menu-item (click)=\"signOut()\">\n              <mat-icon>logout</mat-icon>\n              <span>Sign out</span>\n            </button>\n            \n          </mat-menu>\n        </div>\n      \n\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n\n  <!-- footer -->\n  <div fxFlex>\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content\">\n        <p>\n          &copy; {{ year | date: \"yyyy\" }} nodebucket - Designed by Adam Luna</p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>","/*\n ==================================\n ; Title: base-layout.component.ts\n ; Author: Professor Krasso\n ; Modified by: Adam Luna\n ; Date: 25 August 2021\n ; Description: base layout component TS file\n ================================== \n*/\n// import statements\nimport { Component, OnInit } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-base-layout\",\n  templateUrl: \"./base-layout.component.html\",\n  styleUrls: [\"./base-layout.component.css\"],\n})\nexport class BaseLayoutComponent implements OnInit {\n  year: number = Date.now();\n  isLoggedIn: boolean;\n  name: string;\n\n  // get name of logged in user and log message to console\n  constructor(private cookieService: CookieService, private router: Router) {\n    this.isLoggedIn = this.cookieService.get(\"session_user\") ? true : false;\n\n    this.name = sessionStorage.getItem(\"name\");\n    console.log(\"Signed in as \" + this.name);\n  }\n\n  ngOnInit(): void {}\n\n  signOut() {\n    this.cookieService.deleteAll();\n    this.router.navigate([\"/session/signin\"]);\n  }\n}\n","/*\n============================================\n; Title: not-found.component.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 01 September 2021\n; Description: not-found component TS file\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n============================================\n; Title:  not-found.component.html\n; Author: Adam Luna\n; Date: 01 September 2021\n; Description: not-found component HTML file\n;===========================================\n -->\n<img src=\"../../../assets/404_image.png\" alt=\"404 Squid Image\">\n","/*\n============================================\n; Title: app-routing.module.ts\n; Author: Professor Krasso\n; Modified by: Adam Luna\n; Date: 19 August 2021\n; Description: app routing module TS file\n;===========================================\n*/\n// import statements\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'contact',\n        component: ContactComponent,\n        canActivate: [AuthGuard]        \n      },\n      {\n        path: 'about',\n        component: AboutComponent,\n        canActivate: [AuthGuard]\n      }\n    ]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}